name: Prophet Kacou Release Process
on:
  push:
    branches:
      - deploy
  workflow_dispatch:
    inputs:
      application:
        description: "The fully qualified slug of your app on CrabNebula Cloud"
        required: true
        default: "prophet-kacou/prophet-kacou"

env:
  CN_APPLICATION: ${{ vars.CN_APPLICATION }}
  APPLE_ID: ${{ vars.APPLE_ID }}
  APPLE_ID_PASSWORD: ${{ vars.APPLE_ID_PASSWORD }}
  APPLE_EXPORT_CERTIFICATE_PASSWORD: ${{ vars.APPLE_EXPORT_CERTIFICATE_PASSWORD }}
  CN_API_KEY: ${{ vars.CN_API_KEY }}
  RELEASE_NOTE: ./release-notes.txt
  APPLE_CERTIFICATE: ${{ vars.APPLE_CERTIFICATE }}
  KEYCHAIN_PASSWORD: ${{ vars.KEYCHAIN_PASSWORD }}
  TAURI_SIGNING_PRIVATE_KEY: ${{ vars.TAURI_SIGNING_PRIVATE_KEY }}
  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ vars.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  draft:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: create draft release
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release draft ${{ env.CN_APPLICATION }} --framework tauri --notes-file ${{ env.RELEASE_NOTE }}
          api-key: ${{ env.CN_API_KEY }}

  # Build jobs separated by architecture/platform for native compilation
  build-macos:
    name: Build macOS Universal
    needs: draft
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Add Rust targets for Universal Binary
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build macOS x86_64-apple-darwin
        run: pnpm tauri build --target x86_64-apple-darwin
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Build macOS aarch64-apple-darwin
        run: pnpm tauri build --target aarch64-apple-darwin
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      
      - name: Build macOS universal-apple-darwin
        run: pnpm tauri build --bundles app --target universal-apple-darwin
          #pnpm tauri build --bundles app --target universal-apple-darwin --config src-tauri/tauri.onlineappstore.conf.json
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      # Debug: Check what was actually built
      - name: Debug - List build artifacts
        run: |
          echo "=== Searching for build artifacts ==="
          find src-tauri/target -name "*.app" -type d 2>/dev/null || echo "No .app bundles found"
          find src-tauri/target -name "*.dmg" 2>/dev/null || echo "No .dmg files found"
          find src-tauri/target -name "*.pkg" 2>/dev/null || echo "No .pkg files found"
          echo ""
          echo "=== Complete target directory structure ==="
          ls -la src-tauri/target/ || echo "Target directory not found"
          echo ""
          echo "=== Universal build directory ==="
          ls -la src-tauri/target/universal-apple-darwin/release/bundle/ 2>/dev/null || echo "Universal bundle directory not found"
          echo ""
          echo "=== Alternative build locations ==="
          find . -name "*.app" -type d 2>/dev/null || echo "No .app bundles found anywhere"
          find . -name "*.dmg" 2>/dev/null || echo "No .dmg files found anywhere"
          
      # Try to upload with correct path
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-windows-x64:
    name: Build Windows x64
    needs: draft
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Add Rust target
        run: rustup target add x86_64-pc-windows-msvc
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Windows x86_64-pc-windows-msvc
        run: pnpm tauri build --target x86_64-pc-windows-msvc
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-windows-x86:
    name: Build Windows x86
    needs: draft
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Add Rust target
        run: rustup target add i686-pc-windows-msvc
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Windows i686-pc-windows-msvc
        run: pnpm tauri build --target i686-pc-windows-msvc
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-windows-arm64:
    name: Build Windows ARM64
    needs: draft
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Add Rust target
        run: rustup target add aarch64-pc-windows-msvc
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Windows aarch64-pc-windows-msvc
        run: pnpm tauri build --target aarch64-pc-windows-msvc
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-linux-x64:
    name: Build Linux x64
    needs: draft
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          sudo apt-get install -y pkg-config build-essential
      - name: Add Rust target
        run: rustup target add x86_64-unknown-linux-gnu
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Linux x86_64-unknown-linux-gnu
        run: pnpm tauri build --target x86_64-unknown-linux-gnu
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-linux-aarch64:
    name: Build Linux aarch64
    needs: draft
    runs-on: ubuntu-22.04-arm
    steps:

      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Install stable Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          sudo apt-get install -y pkg-config build-essential
      - name: Add Rust target
        run: rustup target add aarch64-unknown-linux-gnu
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Linux aarch64-unknown-linux-gnu
        run: pnpm tauri build --target aarch64-unknown-linux-gnu
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  build-linux-armv7:
    name: Build Linux ARMv7
    needs: draft
    runs-on: ubuntu-22.04-arm
    steps:

      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Install stable Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          sudo apt-get install -y pkg-config build-essential
      - name: Add Rust target
        run: rustup target add armv7-unknown-linux-gnueabihf
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Linux armv7-unknown-linux-gnueabihf
        run: pnpm tauri build --target armv7-unknown-linux-gnueabihf
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ env.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload assets
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ env.CN_API_KEY }}

  # publish:
  #   needs: 
  #     - build-macos
  #     - build-windows-x64
  #     - build-windows-x86
  #     - build-windows-arm64
  #     - build-linux-x64
  #     - build-linux-aarch64
  #     - build-linux-armv7
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish release
  #       uses: crabnebula-dev/cloud-release@v0
  #       with:
  #         command: release publish ${{ env.CN_APPLICATION }} --framework tauri
  #         api-key: ${{ env.CN_API_KEY }}